#! /bin/sh

pwd=$PWD

usage()
{
    echo "usage: $0 n_blocs [term]    " 1>&2
    echo "       term = xterm | xemacs" 1>&2
}

if [ $# -lt 1 ]; then
    usage
    exit 1
fi

n_blocs=$1
term=$2
server=4444
start=6543
ports=$(seq $start $(($start + $n_blocs - 1)))

sockets()
{
    # Close sockets:
    for port in $ports $server; do
        lsof -i udp:$port | tail -n1 | awk '{print $2}' | xargs kill -9 &> /dev/null
    done
}

if [ -z "$term" ]; then
    term=xterm
fi

if [ "$term" != "xterm" -a "$term" != "xemacs" ]; then
    usage
    echo 1>&2
    echo "error: term must be 'xterm' or 'xemacs'" 1>&2
    exit 1
fi


cd $(dirname $0)

make || exit $?

cd ../simulator
sbt compile || exit 1
sbt "run $(../scripts/mtu)" &
sbt=$!
cd -

sockets

bg=-rv
wait="while ! lsof -i udp:$server > /dev/null; do sleep 0.1s; done;"
xtermgdb="gdb -x .gdbinit -q -ex run --args main"
emacsgdb="./gdb -x .gdbinit --annotate=3 -q --args main"
for port in $ports; do
    case "$term" in
        xterm)
            #if [ "$bg" != "-rv" ]; then bg="-rv"; else bg=""; fi
            xterm $bg -e zsh -c "$wait $xtermgdb $port" &
            sleep 0.1s
            ;;
        xemacs)
            emacs main.c --eval "(gdb \"$emacsgdb $port\")" &
            ;;
    esac
done

finish()
{
    # Restore current directory:
    cd $pwd

    case "$term" in
        xemacs)
            ps aux | grep "[e]macs" | grep "main\.c" | grep "\./gdb" | grep "main" \
                | awk '{print $2}' | xargs kill -9
            ;;
        xterm)
            ps aux | grep "bloc/[m]ain" | awk '{print $2}' | xargs kill -9 &> /dev/null
            ps aux | grep "$xtermgdb" | awk '{print $2}' | xargs kill -9 &> /dev/null
            ;;
    esac

    sockets

    # Kill processes:
    ps -f ax | awk '{printf("%d %d\n", $2, $3)}' | grep $sbt | awk '{print $1}' | xargs kill -9 &> /dev/null
    ps aux | grep "[s]imulator.Simulator" | awk '{print $2}' | xargs kill -9 &> /dev/null

    # Exit gently:
    exit 0
}

trap "finish" SIGINT SIGTERM

while [ 1 ]; do
    sleep 1h
done

exit 0
